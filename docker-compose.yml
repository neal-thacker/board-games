services:
  app:
    build:
      context: .
      args:
        UID: ${DOCKER_UID:-1000}
        GID: ${DOCKER_GID:-1000}
      dockerfile: docker/php/Dockerfile
    container_name: laravel-app
    ports:
      - 8000:8000
    volumes:
      - ./backend/app:/var/www
    depends_on:
      - db
    working_dir: /var/www
    command: >
      sh -c "composer install &&
          php artisan serve --host=0.0.0.0 --port=8000"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: secret
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}

    restart: on-failure

  db:
    image: mysql:8
    container_name: laravel-db
    restart: always
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
    container_name: react-frontend
    restart: on-failure
    depends_on:
      - app
    expose:
      - 80
    environment:
      - NODE_ENV=production

  nginx:
    image: nginx:alpine
    container_name: nginx-web
    restart: on-failure
    ports:
      - 80:80
    depends_on:
      - frontend
      - app
    volumes:
      - ./frontend/frontend.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro

volumes:
  dbdata:
